{"version":3,"sources":["App.js","index.js"],"names":["Person","window","location","origin","person","name","number","Persons","persons","map","p","App","useState","setPersons","newName","setNewName","newNo","setNewNo","query","setNewQuery","value","onChange","e","target","onSubmit","preventDefault","some","alert","concat","console","log","type","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"wJAKMA,GAFUC,OAAOC,SAASC,OAEjB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAQ,8BAAIA,EAAOC,KAAX,IAAkBD,EAAOE,YAG7BC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,8BACGA,EAAQC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAqBN,OAAQM,GAAhBA,EAAEL,YAkE3BM,EA7DH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRJ,EADQ,KACCK,EADD,OAEgBD,mBAAS,IAFzB,mBAERE,EAFQ,KAECC,EAFD,OAGYH,mBAAS,IAHrB,mBAGRI,EAHQ,KAGDC,EAHC,OAIeL,mBAAS,IAJxB,mBAIRM,EAJQ,KAIDC,EAJC,KAqChB,OACE,gCACE,2CACA,qDACoB,uBAAOC,MAAOF,EAAOG,SAjBnB,SAACC,GACzBH,EAAYG,EAAEC,OAAOH,aAkBnB,0CAAaN,KACb,uBAAMU,SAtCM,SAACF,GACfA,EAAEG,iBACEjB,EAAQkB,MAAK,SAACtB,GAAD,OAAYA,EAAOC,OAASS,KAC3Cb,OAAO0B,MAAP,UAAgBb,EAAhB,mCAEAD,EAAWL,EAAQoB,OAAO,CAAEvB,KAAMS,EAASR,OAAQU,MAiCnD,UACE,yCACQ,uBAAOI,MAAON,EAASO,SA/BZ,SAACC,GACxBO,QAAQC,IAAIR,EAAEC,OAAOH,OACrBL,EAAWO,EAAEC,OAAOH,aA+BhB,2CACU,uBAAOA,MAAOJ,EAAOK,SA7Bd,SAACC,GACtBL,EAASK,EAAEC,OAAOH,aA8Bd,8BACE,wBAAQW,KAAK,SAAb,sBAGJ,yCACA,cAAC,EAAD,CAASvB,QAASA,EAAQwB,QAAO,SAACtB,GAAD,OAAOA,EAAEL,KAAK4B,cAAcC,SAAShB,EAAMe,wBCtElFE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b259ec4.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\nconst baseUrl = window.location.origin\n\nconst Person = ({ person }) => {\n  return (<p>{person.name} {person.number}</p>)\n}\n\nconst Persons = ({ persons }) => {\n  return (\n    <div>\n      {persons.map((p) => (<Person key={p.name} person={p}/>))}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNo, setNewNo ] = useState('')\n  const [ query, setNewQuery ] = useState('')\n\n  const addName = (e) => {\n    e.preventDefault()\n    if (persons.some((person) => person.name === newName)) {\n      window.alert(`${newName} is already added to phonebook`)\n    } else {\n      setPersons(persons.concat({ name: newName, number: newNo }))\n    }\n  }\n\n  const handleNameChange = (e) => {\n    console.log(e.target.value)\n    setNewName(e.target.value)\n  }\n\n  const handleNoChange = (e) => {\n    setNewNo(e.target.value)\n  }\n\n  const handleQueryChange = (e) => {\n    setNewQuery(e.target.value)\n  }\n\n  // useEffect(() => {\n  //   axios\n  //   .get(`/api/persons`)\n  //   .then(response => {\n  //     setPersons(response.data)\n  //   })\n  // }, [])\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        filter shown with <input value={query} onChange={handleQueryChange}/>\n      </div>\n      <div>debug: {newName}</div>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNo} onChange={handleNoChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <Persons persons={persons.filter((p) => p.name.toLowerCase().includes(query.toLowerCase()))} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}